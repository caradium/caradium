<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sonarr.Common</name>
    </assembly>
    <members>
        <member name="T:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsEmptyCollection">
            <summary>
              Looks up a localized string similar to Empty collection is not allowed..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsEmptyGuid">
            <summary>
              Looks up a localized string similar to Empty Guid is not allowed..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotFalse">
            <summary>
              Looks up a localized string similar to Expected an expression that evaluates to false..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotGt">
            <summary>
              Looks up a localized string similar to value &apos;{0}&apos; is not greater than limit &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotGte">
            <summary>
              Looks up a localized string similar to value &apos;{0}&apos; is not greater than or equal to limit &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotInRange_ToHigh">
            <summary>
              Looks up a localized string similar to value &apos;{0}&apos; is &gt; max &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotInRange_ToLong">
            <summary>
              Looks up a localized string similar to The string is too long. Must be between &apos;{0}&apos; and  &apos;{1}&apos;. Must be between &apos;{0}&apos; and &apos;{1}&apos; but was &apos;{2}&apos; characters long..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotInRange_ToLow">
            <summary>
              Looks up a localized string similar to value &apos;{0}&apos; is &lt; min &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotInRange_ToShort">
            <summary>
              Looks up a localized string similar to The string is not long enough. Must be between &apos;{0}&apos; and &apos;{1}&apos; but was &apos;{2}&apos; characters long..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotLt">
            <summary>
              Looks up a localized string similar to value &apos;{0}&apos; is not lower than limit &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotLte">
            <summary>
              Looks up a localized string similar to value &apos;{0}&apos; is not lower than or equal to limit &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotNull">
            <summary>
              Looks up a localized string similar to Value can not be null..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotNullOrEmpty">
            <summary>
              Looks up a localized string similar to The string can&apos;t be null or empty..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotNullOrWhiteSpace">
            <summary>
              Looks up a localized string similar to The string can&apos;t be left empty, null or consist of only whitespaces..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotOfType">
            <summary>
              Looks up a localized string similar to The param is not of expected type: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_IsNotTrue">
            <summary>
              Looks up a localized string similar to Expected an expression that evaluates to true..
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.EnsureExtensions_NoMatch">
            <summary>
              Looks up a localized string similar to value &apos;{0}&apos; does not match &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:NzbDrone.Common.EnsureThat.Resources.ExceptionMessages.ExpressionUtils_GetRightMostMember_NoMemberFound">
            <summary>
              Looks up a localized string similar to No MemberExpression found in expression: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="M:NzbDrone.Common.Expansive.Expansive.ToExpando(System.Object)">
            <summary>
            Turns the object into an ExpandoObject
            </summary>
        </member>
        <member name="M:NzbDrone.Common.Expansive.Expansive.ToDictionary(System.Object)">
            <summary>
            Turns the object into a Dictionary
            </summary>
        </member>
        <member name="T:NzbDrone.Common.OAuth.OAuthRequest">
            <summary>
            A request wrapper for the OAuth 1.0a specification.
            </summary>
            <seealso href="http://oauth.net/"/>
        </member>
        <member name="P:NzbDrone.Common.OAuth.OAuthRequest.RequestUrl">
            <seealso href="http://oauth.net/core/1.0#request_urls"/>
        </member>
        <member name="T:NzbDrone.Common.OAuth.OAuthRequestType">
            <summary>
            The types of OAuth requests possible in a typical workflow.
            Used for validation purposes and to build static helpers.
            </summary>
        </member>
        <member name="T:NzbDrone.Common.OAuth.OAuthSignatureMethod">
            <summary>
            The encryption method to use when hashing a request signature.
            </summary>
        </member>
        <member name="T:NzbDrone.Common.OAuth.OAuthSignatureTreatment">
            <summary>
            Specifies whether the final signature value should be escaped during calculation.
            This might be necessary for some OAuth implementations that do not obey the default
            specification for signature escaping.
            </summary>
        </member>
        <member name="T:NzbDrone.Common.OAuth.OAuthTools">
            <summary>
            A general purpose toolset for creating components of an OAuth request.
             </summary>
            <seealso href="http://oauth.net/"/>
        </member>
        <member name="F:NzbDrone.Common.OAuth.OAuthTools._encoding">
            <summary>
            All text parameters are UTF-8 encoded (per section 5.1).
            </summary>
            <seealso href="http://www.hueniverse.com/hueniverse/2008/10/beginners-gui-1.html"/>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.GetNonce">
            <summary>
            Generates a random 16-byte lowercase alphanumeric string.
            </summary>
            <seealso href="http://oauth.net/core/1.0#nonce"/>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.GetTimestamp">
            <summary>
            Generates a timestamp based on the current elapsed seconds since '01/01/1970 0000 GMT"
            </summary>
            <seealso href="http://oauth.net/core/1.0#nonce"/>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.GetTimestamp(System.DateTime)">
            <summary>
            Generates a timestamp based on the elapsed seconds of a given time since '01/01/1970 0000 GMT"
            </summary>
            <seealso href="http://oauth.net/core/1.0#nonce"/>
            <param name="dateTime">A specified point in time.</param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.UrlEncodeRelaxed(System.String)">
            <summary>
            URL encodes a string based on section 5.1 of the OAuth spec.
            Namely, percent encoding with [RFC3986], avoiding unreserved characters,
            upper-casing hexadecimal characters, and UTF-8 encoding for text value pairs.
            </summary>
            <param name="value"></param>
            <seealso href="http://oauth.net/core/1.0#encoding_parameters" />
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.UrlEncodeStrict(System.String)">
            <summary>
            URL encodes a string based on section 5.1 of the OAuth spec.
            Namely, percent encoding with [RFC3986], avoiding unreserved characters,
            upper-casing hexadecimal characters, and UTF-8 encoding for text value pairs.
            </summary>
            <param name="value"></param>
            <seealso href="http://oauth.net/core/1.0#encoding_parameters" />
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.NormalizeRequestParameters(NzbDrone.Common.OAuth.WebParameterCollection)">
            <summary>
            Sorts a collection of key-value pairs by name, and then value if equal,
            concatenating them into a single string. This string should be encoded
            prior to, or after normalization is run.
            </summary>
            <seealso href="http://oauth.net/core/1.0#rfc.section.9.1.1"/>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.SortParametersExcludingSignature(NzbDrone.Common.OAuth.WebParameterCollection)">
            <summary>
            Sorts a <see cref="T:NzbDrone.Common.OAuth.WebParameterCollection"/> by name, and then value if equal.
            </summary>
            <param name="parameters">A collection of parameters to sort</param>
            <returns>A sorted parameter collection</returns>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.ConstructRequestUrl(System.Uri)">
            <summary>
            Creates a request URL suitable for making OAuth requests.
            Resulting URLs must exclude port 80 or port 443 when accompanied by HTTP and HTTPS, respectively.
            Resulting URLs must be lower case.
            </summary>
            <seealso href="http://oauth.net/core/1.0#rfc.section.9.1.2"/>
            <param name="url">The original request URL</param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.ConcatenateRequestElements(System.String,System.String,NzbDrone.Common.OAuth.WebParameterCollection)">
            <summary>
            Creates a request elements concatenation value to send with a request.
            This is also known as the signature base.
            </summary>
            <seealso href="http://oauth.net/core/1.0#rfc.section.9.1.3"/>
            <seealso href="http://oauth.net/core/1.0#sig_base_example"/>
            <param name="method">The request's HTTP method type</param>
            <param name="url">The request URL</param>
            <param name="parameters">The request's parameters</param>
            <returns>A signature base string</returns>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.GetSignature(NzbDrone.Common.OAuth.OAuthSignatureMethod,System.String,System.String)">
            <summary>
            Creates a signature value given a signature base and the consumer secret.
            This method is used when the token secret is currently unknown.
            </summary>
            <seealso href="http://oauth.net/core/1.0#rfc.section.9.2"/>
            <param name="signatureMethod">The hashing method</param>
            <param name="signatureBase">The signature base</param>
            <param name="consumerSecret">The consumer key</param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.GetSignature(NzbDrone.Common.OAuth.OAuthSignatureMethod,NzbDrone.Common.OAuth.OAuthSignatureTreatment,System.String,System.String)">
            <summary>
            Creates a signature value given a signature base and the consumer secret.
            This method is used when the token secret is currently unknown.
            </summary>
            <seealso href="http://oauth.net/core/1.0#rfc.section.9.2"/>
            <param name="signatureMethod">The hashing method</param>
            <param name="signatureTreatment">The treatment to use on a signature value</param>
            <param name="signatureBase">The signature base</param>
            <param name="consumerSecret">The consumer key</param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.GetSignature(NzbDrone.Common.OAuth.OAuthSignatureMethod,System.String,System.String,System.String)">
            <summary>
            Creates a signature value given a signature base and the consumer secret and a known token secret.
            </summary>
            <seealso href="http://oauth.net/core/1.0#rfc.section.9.2"/>
            <param name="signatureMethod">The hashing method</param>
            <param name="signatureBase">The signature base</param>
            <param name="consumerSecret">The consumer secret</param>
            <param name="tokenSecret">The token secret</param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Common.OAuth.OAuthTools.GetSignature(NzbDrone.Common.OAuth.OAuthSignatureMethod,NzbDrone.Common.OAuth.OAuthSignatureTreatment,System.String,System.String,System.String)">
            <summary>
            Creates a signature value given a signature base and the consumer secret and a known token secret.
            </summary>
            <seealso href="http://oauth.net/core/1.0#rfc.section.9.2"/>
            <param name="signatureMethod">The hashing method</param>
            <param name="signatureTreatment">The treatment to use on a signature value</param>
            <param name="signatureBase">The signature base</param>
            <param name="consumerSecret">The consumer secret</param>
            <param name="tokenSecret">The token secret</param>
            <returns></returns>
        </member>
        <member name="F:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler._currentThreadIsProcessingItems">
            <summary>Whether the current thread is processing work items.</summary>
        </member>
        <member name="F:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler._tasks">
            <summary>The list of tasks to be executed.</summary>
        </member>
        <member name="F:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler._maxDegreeOfParallelism">
            <summary>The maximum concurrency level allowed by this scheduler.</summary>
        </member>
        <member name="F:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler._delegatesQueuedOrRunning">
            <summary>Whether the scheduler is currently processing work items.</summary>
        </member>
        <member name="M:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler.#ctor(System.Int32)">
            <summary>
            Initializes an instance of the LimitedConcurrencyLevelTaskScheduler class with the
            specified degree of parallelism.
            </summary>
            <param name="maxDegreeOfParallelism">The maximum degree of parallelism provided by this scheduler.</param>
        </member>
        <member name="M:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler.QueueTask(System.Threading.Tasks.Task)">
            <summary>Queues a task to the scheduler.</summary>
            <param name="task">The task to be queued.</param>
        </member>
        <member name="M:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler.NotifyThreadPoolOfPendingWork">
            <summary>
            Informs the ThreadPool that there's work to be executed for this scheduler.
            </summary>
        </member>
        <member name="M:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
            <summary>Attempts to execute the specified task on the current thread.</summary>
            <param name="task">The task to be executed.</param>
            <param name="taskWasPreviouslyQueued"></param>
            <returns>Whether the task could be executed on the current thread.</returns>
        </member>
        <member name="M:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler.TryDequeue(System.Threading.Tasks.Task)">
            <summary>Attempts to remove a previously scheduled task from the scheduler.</summary>
            <param name="task">The task to be removed.</param>
            <returns>Whether the task could be found and removed.</returns>
        </member>
        <member name="P:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler.MaximumConcurrencyLevel">
            <summary>Gets the maximum concurrency level supported by this scheduler.</summary>
        </member>
        <member name="M:NzbDrone.Common.TPL.LimitedConcurrencyLevelTaskScheduler.GetScheduledTasks">
            <summary>Gets an enumerable of the tasks currently scheduled on this scheduler.</summary>
            <returns>An enumerable of the tasks currently scheduled.</returns>
        </member>
    </members>
</doc>
