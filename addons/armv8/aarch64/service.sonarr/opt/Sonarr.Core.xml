<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sonarr.Core</name>
    </assembly>
    <members>
        <member name="T:NzbDrone.Core.Datastore.ExpressionVisitor">
            <summary>
            Expression visitor
            </summary>
        </member>
        <member name="M:NzbDrone.Core.Datastore.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Visits expression and delegates call to different to branch.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Core.Datastore.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Visits the constance expression. To be implemented by user.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Core.Datastore.ExpressionVisitor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits the member access expression. To be implemented by user.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Core.Datastore.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visits the method call expression. To be implemented by user.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Core.Datastore.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits the binary expression.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Core.Datastore.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Visits the unary expression.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:NzbDrone.Core.Datastore.ExpressionVisitor.VisitLamda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Visits the lamda expression.
            </summary>
            <param name="lambdaExpression"></param>
            <returns></returns>
        </member>
        <member name="T:NzbDrone.Core.Datastore.LazyLoaded`1">
            <summary>
            Allows a field to be lazy loaded.
            </summary>
            <typeparam name="TChild"></typeparam>
        </member>
        <member name="T:NzbDrone.Core.Datastore.LazyLoaded`2">
            <summary>
            This is the lazy loading proxy.
            </summary>
            <typeparam name="TParent">The parent entity that contains the lazy loaded entity.</typeparam>
            <typeparam name="TChild">The child entity that is being lazy loaded.</typeparam>
        </member>
        <member name="M:NzbDrone.Core.Datastore.Migration.Framework.SqliteSchemaDumper.GetDbType(System.String)">
            <summary>
            Get DbType from string type definition
            </summary>
            <param name="typeNum"></param>
            <returns></returns>
        </member>
        <member name="P:NzbDrone.Core.Download.Clients.DownloadStation.DownloadStation2Task.Type">
            <summary>
            /// Possible values are: BT, NZB, http, ftp, eMule and https
            </summary>
        </member>
        <member name="P:NzbDrone.Core.Download.Clients.DownloadStation.DownloadStationTask.Type">
            <summary>
            /// Possible values are: BT, NZB, http, ftp, eMule and https
            </summary>
        </member>
        <member name="T:NzbDrone.Core.Download.Clients.Sabnzbd.JsonConverters.SabnzbdStringArrayConverter">
            <summary>
            On some properties sab serializes array of single item as plain string.
            </summary>
        </member>
        <member name="M:NzbDrone.Core.Indexers.TorrentRss.TorrentRssSettingsDetector.Detect(NzbDrone.Core.Indexers.TorrentRss.TorrentRssIndexerSettings)">
            <summary>
            Detect settings for Parser, based on URL
            </summary>
            <param name="settings">Indexer Settings to use for Parser</param>
            <returns>Parsed Settings or <c>null</c></returns>
        </member>
    </members>
</doc>
